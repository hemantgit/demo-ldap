update PROPERTY_DEFINITION set required = 0 where required is null;
alter table PROPERTY_DEFINITION alter column required SET not null;
alter table PROPERTY_DEFINITION alter column required SET default 0;

REORG TABLE property_definition;

insert into property_definition (cardinality, displayname, inherited, localname, localnamespace, objectid, object_type_id, orderable, queryname, queryable, required, type, updatability)
  select 'single',
    'Publish State',
    '0',
    'bb:publishState',
    'http://docs.oasis-open.org/ns/cmis/core/200908/',
    'bb:publishState',
    id,
    '0',
    'bb:publishState',
    '0',
    0,
    'string',
    'readwrite'
  from object_type_definition
  where objectid='cmis:document';


INSERT INTO PROPERTY_DATA (
  DISPLAYNAME, OBJECT_DATA_ID, OBJECTID, PROPERTY_DEFINITION_ID, QUERYNAME)
  SELECT
    'Publish State',
    OD.ID,
    'bb:publishState',
    (SELECT PDEF.ID FROM PROPERTY_DEFINITION AS PDEF WHERE PDEF.OBJECTID = 'bb:publishState'),
    'bb:publishState'
  FROM OBJECT_DATA AS OD
    join OBJECT_TYPE_DEFINITION as OTD on OD.OBJECT_TYPE_ID=OTD.ID
  WHERE OTD.BASETYPE = 'cmis:document';


create table repository_definition (
  id bigint NOT NULL generated by default as identity,
  REPOSITORY_ID varchar(255) NOT NULL UNIQUE,
  NAME varchar(255) NOT NULL UNIQUE,
  DESCRIPTION varchar(255) DEFAULT NULL,
  VENDOR_NAME varchar(255) DEFAULT NULL,
  PRODUCT_NAME varchar(255) DEFAULT NULL,
  PRODUCT_VERSION varchar(255) NOT NULL,
  PRIMARY KEY (id)
);

insert into repository_definition
values
  (1,
   'contentRepository',
   'Content Repository',
   'Backbase Content Services content repository for storing content, both pulled and pushed in from sources like a CMS or webfeeds.',
   'Backbase',
   'Backbase Content Repository',
   '0.1'),
  (2,
   'configurationRepository',
   'Configuration Repository',
   'Backbase Content Services configuration Services repository for storing configuration, both pulled and pushed in from sources like a CMS or webfeeds.',
   'Backbase','Backbase Configuration Repository','0.1'),
  (3,
   'resourceRepository',
   'Resource Repository',
   'Backbase Content Services resource repository for storing resources, both pulled and pushed in from sources like a CMS or webfeeds.',
   'Backbase','Backbase Resource Repository','0.1');

create table relationships (
  id bigint NOT NULL generated by default as identity,
  objectId varchar(255) NOT NULL,
  sourceId bigint DEFAULT NULL,
  targetRepositoryId varchar(255) NOT NULL,
  targetObjectId varchar(255) NOT NULL,
  relationshipType varchar(255) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT FK_REL_OD FOREIGN KEY (sourceId) REFERENCES object_data (id)
);

create index REL_TARGET_IDX on relationships(targetRepositoryId,targetObjectId);

drop index ODPATH_IDX;

CREATE OR REPLACE VARIABLE tmp VARCHAR(150);
SET tmp = (select constname from syscat.KEYCOLUSE where tabname='OBJECT_DATA' and colname='OBJECTID');
begin execute immediate 'alter table OBJECT_DATA drop UNIQUE ' || tmp; end;
drop variable tmp;

alter table OBJECT_DATA rename column objectDataPath to path;

alter table OBJECT_DATA add column RD_ID bigint;

update OBJECT_DATA set RD_ID = '1' where RD_ID is null;

alter table OBJECT_DATA alter column RD_ID set NOT NULL;

alter table OBJECT_DATA
  add constraint FK_OD_RD foreign key (RD_ID)
  references repository_definition (id);

alter table OBJECT_TYPE_DEFINITION add RD_ID bigint DEFAULT 1 NOT NULL;

REORG table OBJECT_DATA;
REORG table OBJECT_TYPE_DEFINITION;

CREATE OR REPLACE VARIABLE tmp VARCHAR(150);
SET tmp = (select constname from syscat.KEYCOLUSE where tabname='OBJECT_TYPE_DEFINITION' and colname='OBJECTID');
begin execute immediate 'alter table OBJECT_TYPE_DEFINITION drop UNIQUE ' || tmp; end;
drop variable tmp;

REORG table OBJECT_DATA;

create index FK_OD_IDX_OD_RD_REPOID on OBJECT_DATA (RD_ID);

UPDATE PROPERTY_DEFINITION SET localname='cmis:changeToken', objectid='cmis:changeToken', queryname='cmis:changeToken'
WHERE localname='cmis:changetoken' or objectid='cmis:changetoken' or queryname='cmis:changetoken';
UPDATE PROPERTY_DATA SET objectid='cmis:changeToken', queryname='cmis:changeToken'
WHERE objectid='cmis:changetoken' or queryname='cmis:changetoken';

REORG table OBJECT_DATA;
REORG table OBJECT_TYPE_DEFINITION;
REORG table PROPERTY_DEFINITION
