<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                 http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <!-- Authentication manager config -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="portalUserDetailsService">
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
        <authentication-provider ref="launchpadRemoteServiceAuthenticationProvider"/>
    </authentication-manager>

    <!-- Helper beans for multifactor authentication -->
    <beans:bean name="launchpadRemoteServiceAuthenticationProvider" class="com.backbase.launchpad.retail.security.RemoteServiceAuthenticationProvider" />
    <beans:bean class="com.backbase.launchpad.retail.security.RemoteAuthenticationService"/>
    <beans:bean name="portalSecurityHelper" class="com.backbase.launchpad.retail.security.PortalSecurityHelper"/>

    <!--
        To enable mBaaS please uncomment corresponding beans below and change customAuthenticationSuccessHandler from LoginSuccessHandler to MobileLoginSuccessHandler.
        Also for mBaaS you should uncomment filter and filter mapping for mobileAuthenticationFilter in web.xml file of portalserver
    -->

    <!-- beans:bean name="customAuthenticationSuccessHandler" class="com.backbase.launchpad.retail.security.LoginSuccessHandler"/ -->
    <beans:bean name="customAuthenticationSuccessHandler" class="com.backbase.launchpad.retail.security.MobileLoginSuccessHandler"/>


    <!-- Launchpad specific success view -->
    <beans:bean class="com.backbase.launchpad.retail.security.successview.PortalServerSuccessViewResolver"/>

    <!--
        filter is used to separate mobile-related requests and handle them properly before going to security chain,
        is used for demo services only. Please see portalserver web.xml to find usage.
     -->
    <beans:bean id="mobileAuthenticationFilter" class="com.backbase.launchpad.retail.security.filters.MobileAuthenticationFilter" />

    <beans:bean id="jwtConfiguration" class="com.backbase.mobile.security.jwt.JsonWebTokenConfiguration" />
    <beans:bean id="jwtMapper" class="com.backbase.mobile.security.jwt.impl.JWTMapper" />
    <beans:bean id="jwtAuthService" class="com.backbase.mobile.security.jwt.impl.JWTAuthenticationServiceImpl" />

    <beans:bean lazy-init="true" id="jwtProviderSignThenEncrypt" class="com.backbase.mobile.security.jwt.impl.JWTProviderSignThenEncrypt"/>
    <beans:bean lazy-init="true" id="jwtProviderEncryptThenSign" class="com.backbase.mobile.security.jwt.impl.JWTProviderEncryptThenSign"/>
    <beans:bean lazy-init="true" id="jwtProviderSigned" class="com.backbase.mobile.security.jwt.impl.JWTProviderSigned"/>

    <beans:bean id="jwtProviderFactory" class="com.backbase.mobile.security.jwt.JsonWebTokenProviderFactory">
        <beans:property name="jwtType">
            <beans:map>
                <beans:entry key="SIGN-THEN-ENCRYPT" value="jwtProviderSignThenEncrypt"></beans:entry>
                <beans:entry key="ENCRYPT-THEN-SIGN" value="jwtProviderEncryptThenSign"></beans:entry>
                <beans:entry key="SIGNED" value="jwtProviderSigned"></beans:entry>
            </beans:map>
        </beans:property>
    </beans:bean>

</beans:beans>